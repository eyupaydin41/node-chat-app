<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Chat Room</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    #messages {
      height: 400px;
      overflow-y: auto;
      margin-bottom: 20px;
      border: 1px solid #ccc;
      border-radius: 5px;
      padding: 10px;
      background-color: #f9f9f9;
    }

    .message-item {
      border: 1px solid #ddd;
      border-radius: 5px;
      padding: 10px;
      margin-bottom: 10px;
      background-color: #fff;
    }

    .message-header {
      display: flex;
      justify-content: space-between;
      font-weight: bold;
    }

    .message-content {
      margin-top: 5px;
    }

    #input-group {
      display: flex;
      border-radius: 20px;
      overflow: hidden;
    }

    #input {
      border-radius: 0;
      border: none;
      flex-grow: 1;
      padding: 10px;
      border: 1px solid #ccc;
    }

    #send-btn {
      border-radius: 0;
      border: none;
      background-color: #007bff;
      color: white;
    }

    #send-btn:hover {
      background-color: #0056b3;
    }
  </style>
</head>

<body>
  <div class="container mt-5">
    <div class="row justify-content-center">
      <div class="col-md-8">
        <h2 class="text-center mb-4">Mesajlaşma Odası</h2>
        <div id="messages" class="mb-3"></div>
        <div id="input-group" class="input-group">
          <input id="input" type="text" autocomplete="off" placeholder="Mesaj yazma alanı" class="form-control" />
          <button id="send-btn" class="btn btn-primary">Gönder</button>
        </div>
      </div>
    </div>
  </div>

  <script src="/socket.io/socket.io.js"></script>
  <script>
    const messagesDiv = document.getElementById('messages');
    const input = document.getElementById('input');
    const sendBtn = document.getElementById('send-btn');

    function scrollToBottom() {
      messagesDiv.scrollTop = messagesDiv.scrollHeight;
    }

    function getCookie(name) {
      const value = `; ${document.cookie}`;
      const parts = value.split(`; ${name}=`);
      if (parts.length === 2) return parts.pop().split(';').shift();
      console.error(`Cookie with name ${name} not found`);
      return null;
    }

    const token = getCookie('jwt');
    if (!token) {
      console.error('JWT token not found');
      alert('Please log in');
      location.assign(`/`);
    }

    const socket = io({
      transports: ['websocket'],
      auth: {
        token
      }
    });

    socket.on('connect_error', (err) => {
      console.error('Socket connection error:', err);
      alert('Lütfen giriş yapınız.');
    });

    sendBtn.addEventListener('click', function () {
      if (input.value) {
        socket.emit('chat message', input.value);
        input.value = '';
      }
    });

    socket.on('chat message', function (msg) {
      const item = document.createElement('div');
      item.className = 'message-item';

      const header = document.createElement('div');
      header.className = 'message-header';
      header.innerHTML = `<span>${msg.userName}</span> <span>${new Date(msg.timestamp).toLocaleTimeString()}</span>`;

      const content = document.createElement('div');
      content.className = 'message-content';
      content.textContent = msg.content;

      item.appendChild(header);
      item.appendChild(content);

      messagesDiv.appendChild(item);

      scrollToBottom();
    });

    async function fetchMessages() {
      try {
        const response = await fetch('/chat/messages', {
          headers: {
            'Authorization': `Bearer ${token}`
          }
        });
        if (response.ok) {
          const responseData = await response.json();
          responseData.data.forEach(msg => {
            const item = document.createElement('div');
            item.className = 'message-item';

            const header = document.createElement('div');
            header.className = 'message-header';
            header.innerHTML = `<span>${msg.user.email}</span> <span>${new Date(msg.timestamp).toLocaleTimeString()}</span>`;

            const content = document.createElement('div');
            content.className = 'message-content';
            content.textContent = msg.content;

            item.appendChild(header);
            item.appendChild(content);

            messagesDiv.appendChild(item);
          });

          scrollToBottom();
        } else {
          console.error('Failed to fetch messages:', response.status);
        }
      } catch (error) {
        console.error('Error fetching messages:', error);
      }
    }

    fetchMessages();
  </script>
</body>

</html>